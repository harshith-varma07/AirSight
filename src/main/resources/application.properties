# H2 File-based Database Configuration (for persistence across restarts)
spring.datasource.url=jdbc:h2:file:./data/airquality;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# H2 Console (accessible at http://localhost:8080/h2-console)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration - Changed to update instead of create-drop to preserve data
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Server Configuration
server.port=8080

# External API Configuration - USE ENVIRONMENT VARIABLES FOR API KEYS
openaq.api.url=https://api.openaq.org/v2/latest
openaq.api.key=${OPENAQ_API_KEY:}
openaq.api.timeout=10000
weather.api.timeout=5000

# SMS Configuration (Twilio - Optional, leave empty to disable SMS)
# USE ENVIRONMENT VARIABLES IN PRODUCTION
twilio.account.sid=${TWILIO_ACCOUNT_SID:}
twilio.auth.token=${TWILIO_AUTH_TOKEN:}
twilio.phone.number=${TWILIO_PHONE_NUMBER:}

# Scheduling Configuration
spring.task.scheduling.pool.size=5

# CORS Configuration
cors.allowed.origins=http://localhost:3000,http://127.0.0.1:5500
cors.allowed.methods=GET,POST,PUT,DELETE

# API Rate Limiting
api.rate.limit.requests=100
api.rate.limit.duration=3600

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=aqiData,userData

# Alert Configuration
alert.max.retries=3
alert.retry.delay=5000
alert.batch.size=10

# Logging Configuration
logging.level.com.air.airquality=INFO
logging.level.org.springframework.web=DEBUG
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/air-quality-monitoring.log

# application.properties
management.endpoints.web.exposure.include=health,info